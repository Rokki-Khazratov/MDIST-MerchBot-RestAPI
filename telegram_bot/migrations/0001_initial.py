# Generated by Django 5.0.2 on 2025-10-19 17:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BotConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_token', models.CharField(help_text='Bot token from @BotFather', max_length=200)),
                ('webhook_url', models.URLField(blank=True, help_text='Webhook URL for receiving updates (e.g., https://your-domain.com/telegram/webhook/)', null=True)),
                ('notification_group_id', models.CharField(help_text='Telegram group ID where notifications will be sent (e.g., -1001234567890)', max_length=50, validators=[django.core.validators.RegexValidator(message='Group ID must be a valid Telegram chat ID', regex='^-?\\d+$')])),
                ('is_active', models.BooleanField(default=True, help_text='Enable/disable bot notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bot Configuration',
                'verbose_name_plural': 'Bot Configuration',
            },
        ),
        migrations.CreateModel(
            name='GroupNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('message_id', models.CharField(blank=True, help_text='Telegram message ID if sent successfully', max_length=50, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if notification failed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_notifications', to='orders.order')),
            ],
            options={
                'verbose_name': 'Group Notification',
                'verbose_name_plural': 'Group Notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]
